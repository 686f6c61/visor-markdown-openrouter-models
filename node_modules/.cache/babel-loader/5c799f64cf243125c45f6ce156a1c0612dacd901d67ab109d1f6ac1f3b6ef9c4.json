{"ast":null,"code":"import axios from'axios';import{getModelById}from'../config/models';const OPENROUTER_API_URL='https://openrouter.ai/api/v1/chat/completions';class OpenRouterService{constructor(){this.apiKey=process.env.REACT_APP_OPENROUTER_API_KEY||'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';if(!this.apiKey){console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');}}async improveMarkdown(markdown,prompt,modelId){let selectedText=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(!this.apiKey){throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');}const textToImprove=selectedText||markdown;const isPartialImprovement=selectedText!==null;const model=getModelById(modelId);const maxTokens=model?model.maxTokens:4000;const systemPrompt=isPartialImprovement?\"Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve \\xFAnicamente el texto mejorado sin explicaciones adicionales.\":\"Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve \\xFAnicamente el markdown mejorado sin explicaciones adicionales.\";const userPrompt=prompt?\"\".concat(prompt,\"\\n\\nTexto a mejorar:\\n\").concat(textToImprove):\"Mejora este \".concat(isPartialImprovement?'texto':'documento markdown',\" haci\\xE9ndolo m\\xE1s claro, coherente y bien estructurado:\\n\\n\").concat(textToImprove);try{var _response$data,_response$data$choice,_response$data$choice2,_response$data$choice3;const response=await axios.post(OPENROUTER_API_URL,{model:modelId,messages:[{role:'system',content:systemPrompt},{role:'user',content:userPrompt}],temperature:0.7,max_tokens:maxTokens,stream:false},{headers:{'Authorization':\"Bearer \".concat(this.apiKey),'Content-Type':'application/json','HTTP-Referer':window.location.origin,'X-Title':'Markdown Preview - Visor Markdown Vitaminado'}});if((_response$data=response.data)!==null&&_response$data!==void 0&&(_response$data$choice=_response$data.choices)!==null&&_response$data$choice!==void 0&&(_response$data$choice2=_response$data$choice[0])!==null&&_response$data$choice2!==void 0&&(_response$data$choice3=_response$data$choice2.message)!==null&&_response$data$choice3!==void 0&&_response$data$choice3.content){return response.data.choices[0].message.content.trim();}else{throw new Error('Respuesta inválida del modelo');}}catch(error){var _error$response,_error$response2,_error$response3;console.error('Error calling OpenRouter API:',error);if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){throw new Error('API key inválida. Verifica tu configuración.');}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===429){throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===402){throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');}else{throw new Error(\"Error al mejorar el markdown: \".concat(error.message));}}}async testConnection(){if(!this.apiKey){return{success:false,error:'API key no configurada'};}try{await axios.post(OPENROUTER_API_URL,{model:'openai/gpt-3.5-turbo',messages:[{role:'user',content:'Test connection'}],max_tokens:10},{headers:{'Authorization':\"Bearer \".concat(this.apiKey),'Content-Type':'application/json','HTTP-Referer':window.location.origin,'X-Title':'Markdown Preview - Test Connection'}});return{success:true};}catch(error){var _error$response4,_error$response4$data,_error$response4$data2;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:(_error$response4$data2=_error$response4$data.error)===null||_error$response4$data2===void 0?void 0:_error$response4$data2.message)||error.message};}}}const openRouterService=new OpenRouterService();export default openRouterService;","map":{"version":3,"names":["axios","getModelById","OPENROUTER_API_URL","OpenRouterService","constructor","apiKey","process","env","REACT_APP_OPENROUTER_API_KEY","console","warn","improveMarkdown","markdown","prompt","modelId","selectedText","arguments","length","undefined","Error","textToImprove","isPartialImprovement","model","maxTokens","systemPrompt","userPrompt","concat","_response$data","_response$data$choice","_response$data$choice2","_response$data$choice3","response","post","messages","role","content","temperature","max_tokens","stream","headers","window","location","origin","data","choices","message","trim","error","_error$response","_error$response2","_error$response3","status","testConnection","success","_error$response4","_error$response4$data","_error$response4$data2","openRouterService"],"sources":["/home/the00b/Escritorio/MD/src/services/openRouterService.js"],"sourcesContent":["import axios from 'axios';\nimport { getModelById } from '../config/models';\n\nconst OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions';\n\nclass OpenRouterService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_OPENROUTER_API_KEY || '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';\n    \n    if (!this.apiKey) {\n      console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');\n    }\n  }\n\n  async improveMarkdown(markdown, prompt, modelId, selectedText = null) {\n    if (!this.apiKey) {\n      throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');\n    }\n\n    const textToImprove = selectedText || markdown;\n    const isPartialImprovement = selectedText !== null;\n    const model = getModelById(modelId);\n    const maxTokens = model ? model.maxTokens : 4000;\n\n    const systemPrompt = isPartialImprovement \n      ? `Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve únicamente el texto mejorado sin explicaciones adicionales.`\n      : `Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve únicamente el markdown mejorado sin explicaciones adicionales.`;\n\n    const userPrompt = prompt \n      ? `${prompt}\\n\\nTexto a mejorar:\\n${textToImprove}`\n      : `Mejora este ${isPartialImprovement ? 'texto' : 'documento markdown'} haciéndolo más claro, coherente y bien estructurado:\\n\\n${textToImprove}`;\n\n    try {\n      const response = await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: modelId,\n          messages: [\n            {\n              role: 'system',\n              content: systemPrompt\n            },\n            {\n              role: 'user',\n              content: userPrompt\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: maxTokens,\n          stream: false\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Visor Markdown Vitaminado'\n          }\n        }\n      );\n\n      if (response.data?.choices?.[0]?.message?.content) {\n        return response.data.choices[0].message.content.trim();\n      } else {\n        throw new Error('Respuesta inválida del modelo');\n      }\n    } catch (error) {\n      console.error('Error calling OpenRouter API:', error);\n      \n      if (error.response?.status === 401) {\n        throw new Error('API key inválida. Verifica tu configuración.');\n      } else if (error.response?.status === 429) {\n        throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');\n      } else if (error.response?.status === 402) {\n        throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');\n      } else {\n        throw new Error(`Error al mejorar el markdown: ${error.message}`);\n      }\n    }\n  }\n\n  async testConnection() {\n    if (!this.apiKey) {\n      return { success: false, error: 'API key no configurada' };\n    }\n\n    try {\n      await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: 'openai/gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'user',\n              content: 'Test connection'\n            }\n          ],\n          max_tokens: 10\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Test Connection'\n          }\n        }\n      );\n\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.error?.message || error.message \n      };\n    }\n  }\n}\n\nconst openRouterService = new OpenRouterService();\nexport default openRouterService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}