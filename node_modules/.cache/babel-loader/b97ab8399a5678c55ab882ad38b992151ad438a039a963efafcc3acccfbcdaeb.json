{"ast":null,"code":"import axios from 'axios';\nimport { getModelById } from '../config/models';\nconst OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions';\nclass OpenRouterService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_OPENROUTER_API_KEY || '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';\n    console.log('API Key configurada:', this.apiKey ? 'Sí' : 'No');\n    console.log('API Key desde env:', process.env.REACT_APP_OPENROUTER_API_KEY ? 'Sí' : 'No');\n    if (!this.apiKey) {\n      console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');\n    }\n  }\n\n  // Función para estimar tokens (aproximadamente 4 caracteres = 1 token)\n  estimateTokens(text) {\n    return Math.ceil(text.length / 4);\n  }\n\n  // Función para calcular tokens de salida seguros\n  calculateSafeOutputTokens(inputText, modelId) {\n    const model = getModelById(modelId);\n    if (!model) return 4000;\n    const inputTokens = this.estimateTokens(inputText);\n    const maxOutputTokens = model.maxTokens;\n    const maxContext = model.contextTokens || 32000; // Usar contextTokens del modelo\n\n    // Reservar espacio para tokens del sistema y margen de seguridad\n    const systemTokens = 200; // Estimación para prompts del sistema\n    const safetyMargin = 1000; // Margen de seguridad\n\n    const availableTokens = maxContext - inputTokens - systemTokens - safetyMargin;\n    const safeOutputTokens = Math.min(maxOutputTokens, Math.max(1000, availableTokens));\n    console.log(`Modelo: ${modelId}`);\n    console.log(`Tokens de entrada estimados: ${inputTokens}`);\n    console.log(`Contexto máximo: ${maxContext}`);\n    console.log(`Tokens de salida configurados: ${maxOutputTokens}`);\n    console.log(`Tokens de salida seguros calculados: ${safeOutputTokens}`);\n    return safeOutputTokens;\n  }\n  async improveMarkdown(markdown, prompt, modelId, selectedText = null) {\n    if (!this.apiKey) {\n      throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');\n    }\n    console.log('=== INICIO DE SOLICITUD ===');\n    console.log('Modelo seleccionado:', modelId);\n    console.log('Prompt personalizado:', prompt || 'Sin prompt personalizado');\n    console.log('Texto seleccionado:', selectedText ? 'Sí' : 'No (documento completo)');\n    const textToImprove = selectedText || markdown;\n    const isPartialImprovement = selectedText !== null;\n    console.log('Longitud del texto a mejorar:', textToImprove.length, 'caracteres');\n    const systemPrompt = isPartialImprovement ? `Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve únicamente el texto mejorado sin explicaciones adicionales.` : `Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve únicamente el markdown mejorado sin explicaciones adicionales.`;\n    const userPrompt = prompt ? `${prompt}\\n\\nTexto a mejorar:\\n${textToImprove}` : `Mejora este ${isPartialImprovement ? 'texto' : 'documento markdown'} haciéndolo más claro, coherente y bien estructurado:\\n\\n${textToImprove}`;\n\n    // Calcular tokens de salida seguros\n    const fullPrompt = systemPrompt + '\\n' + userPrompt;\n    const safeMaxTokens = this.calculateSafeOutputTokens(fullPrompt, modelId);\n    const estimatedInputTokens = this.estimateTokens(fullPrompt);\n    console.log('Tokens de salida máximos configurados:', safeMaxTokens);\n    try {\n      var _response$data, _response$data2, _response$data2$choic, _response$data3, _response$data3$choic, _response$data3$choic2, _response$data3$choic3;\n      console.log('Enviando solicitud a OpenRouter...');\n      const response = await axios.post(OPENROUTER_API_URL, {\n        model: modelId,\n        messages: [{\n          role: 'system',\n          content: systemPrompt\n        }, {\n          role: 'user',\n          content: userPrompt\n        }],\n        temperature: 0.7,\n        max_tokens: safeMaxTokens,\n        stream: false\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'Markdown Preview - Visor Markdown Vitaminado'\n        }\n      });\n      console.log('Respuesta recibida. Status:', response.status);\n      console.log('Estructura de respuesta:', {\n        hasData: !!response.data,\n        hasChoices: !!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.choices),\n        choicesLength: (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$choic = _response$data2.choices) === null || _response$data2$choic === void 0 ? void 0 : _response$data2$choic.length\n      });\n      if ((_response$data3 = response.data) !== null && _response$data3 !== void 0 && (_response$data3$choic = _response$data3.choices) !== null && _response$data3$choic !== void 0 && (_response$data3$choic2 = _response$data3$choic[0]) !== null && _response$data3$choic2 !== void 0 && (_response$data3$choic3 = _response$data3$choic2.message) !== null && _response$data3$choic3 !== void 0 && _response$data3$choic3.content) {\n        var _response$data$usage, _response$data$usage2, _response$data$usage3;\n        const improvedText = response.data.choices[0].message.content.trim();\n        const outputTokens = this.estimateTokens(improvedText);\n\n        // Retornar tanto el texto mejorado como la información de tokens\n        return {\n          improvedText,\n          tokensUsed: {\n            input: ((_response$data$usage = response.data.usage) === null || _response$data$usage === void 0 ? void 0 : _response$data$usage.prompt_tokens) || estimatedInputTokens,\n            output: ((_response$data$usage2 = response.data.usage) === null || _response$data$usage2 === void 0 ? void 0 : _response$data$usage2.completion_tokens) || outputTokens,\n            total: ((_response$data$usage3 = response.data.usage) === null || _response$data$usage3 === void 0 ? void 0 : _response$data$usage3.total_tokens) || estimatedInputTokens + outputTokens\n          }\n        };\n      } else {\n        var _response$data4, _response$data5, _response$data5$choic, _response$data6, _response$data6$choic, _response$data7, _response$data7$choic, _response$data7$choic2, _response$data8, _response$data8$choic, _response$data8$choic2, _response$data8$choic3, _response$data9, _response$data9$choic, _response$data9$choic2, _response$data9$choic3, _response$data0, _response$data0$choic, _response$data0$choic2, _response$data1, _response$data10;\n        // Log detallado para diagnosticar el problema\n        console.error('Estructura de respuesta inesperada:', {\n          hasData: !!response.data,\n          hasChoices: !!((_response$data4 = response.data) !== null && _response$data4 !== void 0 && _response$data4.choices),\n          choicesLength: (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$choic = _response$data5.choices) === null || _response$data5$choic === void 0 ? void 0 : _response$data5$choic.length,\n          firstChoice: (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : (_response$data6$choic = _response$data6.choices) === null || _response$data6$choic === void 0 ? void 0 : _response$data6$choic[0],\n          hasMessage: !!((_response$data7 = response.data) !== null && _response$data7 !== void 0 && (_response$data7$choic = _response$data7.choices) !== null && _response$data7$choic !== void 0 && (_response$data7$choic2 = _response$data7$choic[0]) !== null && _response$data7$choic2 !== void 0 && _response$data7$choic2.message),\n          hasContent: !!((_response$data8 = response.data) !== null && _response$data8 !== void 0 && (_response$data8$choic = _response$data8.choices) !== null && _response$data8$choic !== void 0 && (_response$data8$choic2 = _response$data8$choic[0]) !== null && _response$data8$choic2 !== void 0 && (_response$data8$choic3 = _response$data8$choic2.message) !== null && _response$data8$choic3 !== void 0 && _response$data8$choic3.content),\n          fullResponse: response.data\n        });\n\n        // Intentar extraer cualquier contenido disponible\n        const content = ((_response$data9 = response.data) === null || _response$data9 === void 0 ? void 0 : (_response$data9$choic = _response$data9.choices) === null || _response$data9$choic === void 0 ? void 0 : (_response$data9$choic2 = _response$data9$choic[0]) === null || _response$data9$choic2 === void 0 ? void 0 : (_response$data9$choic3 = _response$data9$choic2.message) === null || _response$data9$choic3 === void 0 ? void 0 : _response$data9$choic3.content) || ((_response$data0 = response.data) === null || _response$data0 === void 0 ? void 0 : (_response$data0$choic = _response$data0.choices) === null || _response$data0$choic === void 0 ? void 0 : (_response$data0$choic2 = _response$data0$choic[0]) === null || _response$data0$choic2 === void 0 ? void 0 : _response$data0$choic2.text) || ((_response$data1 = response.data) === null || _response$data1 === void 0 ? void 0 : _response$data1.content) || ((_response$data10 = response.data) === null || _response$data10 === void 0 ? void 0 : _response$data10.text);\n        if (content && typeof content === 'string' && content.trim()) {\n          var _response$data$usage4, _response$data$usage5, _response$data$usage6;\n          console.log('Contenido encontrado en formato alternativo:', content);\n          const improvedText = content.trim();\n          const outputTokens = this.estimateTokens(improvedText);\n          return {\n            improvedText,\n            tokensUsed: {\n              input: ((_response$data$usage4 = response.data.usage) === null || _response$data$usage4 === void 0 ? void 0 : _response$data$usage4.prompt_tokens) || estimatedInputTokens,\n              output: ((_response$data$usage5 = response.data.usage) === null || _response$data$usage5 === void 0 ? void 0 : _response$data$usage5.completion_tokens) || outputTokens,\n              total: ((_response$data$usage6 = response.data.usage) === null || _response$data$usage6 === void 0 ? void 0 : _response$data$usage6.total_tokens) || estimatedInputTokens + outputTokens\n            }\n          };\n        }\n        throw new Error(`Respuesta inválida del modelo. Estructura recibida: ${JSON.stringify(response.data, null, 2)}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6;\n      console.error('Error calling OpenRouter API:', error);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        throw new Error('API key inválida. Verifica tu configuración en OpenRouter.');\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 429) {\n        throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');\n      } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 402) {\n        throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');\n      } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 400) {\n        var _error$response7, _error$response7$data, _error$response7$data2;\n        const errorMsg = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : (_error$response7$data2 = _error$response7$data.error) === null || _error$response7$data2 === void 0 ? void 0 : _error$response7$data2.message) || 'Solicitud inválida';\n        if (errorMsg.includes('context length') || errorMsg.includes('tokens')) {\n          throw new Error(`El texto es demasiado largo para este modelo. Intenta con un texto más corto o selecciona solo una parte del documento.`);\n        }\n        throw new Error(`Error en la solicitud: ${errorMsg}`);\n      } else if (error.code === 'NETWORK_ERROR') {\n        throw new Error('Error de conexión. Verifica tu conexión a internet.');\n      } else {\n        var _error$response8, _error$response8$data, _error$response8$data2;\n        const errorMsg = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : (_error$response8$data2 = _error$response8$data.error) === null || _error$response8$data2 === void 0 ? void 0 : _error$response8$data2.message) || error.message;\n        throw new Error(`Error al mejorar el markdown: ${errorMsg}`);\n      }\n    }\n  }\n  async testConnection() {\n    if (!this.apiKey) {\n      return {\n        success: false,\n        error: 'API key no configurada'\n      };\n    }\n    try {\n      await axios.post(OPENROUTER_API_URL, {\n        model: 'openai/gpt-3.5-turbo',\n        messages: [{\n          role: 'user',\n          content: 'Test connection'\n        }],\n        max_tokens: 10\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'Markdown Preview - Test Connection'\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data, _error$response9$data2;\n      return {\n        success: false,\n        error: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : (_error$response9$data2 = _error$response9$data.error) === null || _error$response9$data2 === void 0 ? void 0 : _error$response9$data2.message) || error.message\n      };\n    }\n  }\n}\nconst openRouterService = new OpenRouterService();\nexport default openRouterService;","map":{"version":3,"names":["axios","getModelById","OPENROUTER_API_URL","OpenRouterService","constructor","apiKey","process","env","REACT_APP_OPENROUTER_API_KEY","console","log","warn","estimateTokens","text","Math","ceil","length","calculateSafeOutputTokens","inputText","modelId","model","inputTokens","maxOutputTokens","maxTokens","maxContext","contextTokens","systemTokens","safetyMargin","availableTokens","safeOutputTokens","min","max","improveMarkdown","markdown","prompt","selectedText","Error","textToImprove","isPartialImprovement","systemPrompt","userPrompt","fullPrompt","safeMaxTokens","estimatedInputTokens","_response$data","_response$data2","_response$data2$choic","_response$data3","_response$data3$choic","_response$data3$choic2","_response$data3$choic3","response","post","messages","role","content","temperature","max_tokens","stream","headers","window","location","origin","status","hasData","data","hasChoices","choices","choicesLength","message","_response$data$usage","_response$data$usage2","_response$data$usage3","improvedText","trim","outputTokens","tokensUsed","input","usage","prompt_tokens","output","completion_tokens","total","total_tokens","_response$data4","_response$data5","_response$data5$choic","_response$data6","_response$data6$choic","_response$data7","_response$data7$choic","_response$data7$choic2","_response$data8","_response$data8$choic","_response$data8$choic2","_response$data8$choic3","_response$data9","_response$data9$choic","_response$data9$choic2","_response$data9$choic3","_response$data0","_response$data0$choic","_response$data0$choic2","_response$data1","_response$data10","error","firstChoice","hasMessage","hasContent","fullResponse","_response$data$usage4","_response$data$usage5","_response$data$usage6","JSON","stringify","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response7$data","_error$response7$data2","errorMsg","includes","code","_error$response8","_error$response8$data","_error$response8$data2","testConnection","success","_error$response9","_error$response9$data","_error$response9$data2","openRouterService"],"sources":["/home/the00b/Escritorio/MD/src/services/openRouterService.js"],"sourcesContent":["import axios from 'axios';\nimport { getModelById } from '../config/models';\n\nconst OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions';\n\nclass OpenRouterService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_OPENROUTER_API_KEY || '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';\n    \n    console.log('API Key configurada:', this.apiKey ? 'Sí' : 'No');\n    console.log('API Key desde env:', process.env.REACT_APP_OPENROUTER_API_KEY ? 'Sí' : 'No');\n    \n    if (!this.apiKey) {\n      console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');\n    }\n  }\n\n  // Función para estimar tokens (aproximadamente 4 caracteres = 1 token)\n  estimateTokens(text) {\n    return Math.ceil(text.length / 4);\n  }\n\n  // Función para calcular tokens de salida seguros\n  calculateSafeOutputTokens(inputText, modelId) {\n    const model = getModelById(modelId);\n    if (!model) return 4000;\n\n    const inputTokens = this.estimateTokens(inputText);\n    const maxOutputTokens = model.maxTokens;\n    const maxContext = model.contextTokens || 32000; // Usar contextTokens del modelo\n    \n    // Reservar espacio para tokens del sistema y margen de seguridad\n    const systemTokens = 200; // Estimación para prompts del sistema\n    const safetyMargin = 1000; // Margen de seguridad\n    \n    const availableTokens = maxContext - inputTokens - systemTokens - safetyMargin;\n    const safeOutputTokens = Math.min(maxOutputTokens, Math.max(1000, availableTokens));\n    \n    console.log(`Modelo: ${modelId}`);\n    console.log(`Tokens de entrada estimados: ${inputTokens}`);\n    console.log(`Contexto máximo: ${maxContext}`);\n    console.log(`Tokens de salida configurados: ${maxOutputTokens}`);\n    console.log(`Tokens de salida seguros calculados: ${safeOutputTokens}`);\n    \n    return safeOutputTokens;\n  }\n\n  async improveMarkdown(markdown, prompt, modelId, selectedText = null) {\n    if (!this.apiKey) {\n      throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');\n    }\n\n    console.log('=== INICIO DE SOLICITUD ===');\n    console.log('Modelo seleccionado:', modelId);\n    console.log('Prompt personalizado:', prompt || 'Sin prompt personalizado');\n    console.log('Texto seleccionado:', selectedText ? 'Sí' : 'No (documento completo)');\n\n    const textToImprove = selectedText || markdown;\n    const isPartialImprovement = selectedText !== null;\n\n    console.log('Longitud del texto a mejorar:', textToImprove.length, 'caracteres');\n\n    const systemPrompt = isPartialImprovement \n      ? `Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve únicamente el texto mejorado sin explicaciones adicionales.`\n      : `Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve únicamente el markdown mejorado sin explicaciones adicionales.`;\n\n    const userPrompt = prompt \n      ? `${prompt}\\n\\nTexto a mejorar:\\n${textToImprove}`\n      : `Mejora este ${isPartialImprovement ? 'texto' : 'documento markdown'} haciéndolo más claro, coherente y bien estructurado:\\n\\n${textToImprove}`;\n\n    // Calcular tokens de salida seguros\n    const fullPrompt = systemPrompt + '\\n' + userPrompt;\n    const safeMaxTokens = this.calculateSafeOutputTokens(fullPrompt, modelId);\n    const estimatedInputTokens = this.estimateTokens(fullPrompt);\n\n    console.log('Tokens de salida máximos configurados:', safeMaxTokens);\n\n    try {\n      console.log('Enviando solicitud a OpenRouter...');\n      const response = await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: modelId,\n          messages: [\n            {\n              role: 'system',\n              content: systemPrompt\n            },\n            {\n              role: 'user',\n              content: userPrompt\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: safeMaxTokens,\n          stream: false\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Visor Markdown Vitaminado'\n          }\n        }\n      );\n\n      console.log('Respuesta recibida. Status:', response.status);\n      console.log('Estructura de respuesta:', {\n        hasData: !!response.data,\n        hasChoices: !!response.data?.choices,\n        choicesLength: response.data?.choices?.length\n      });\n\n      if (response.data?.choices?.[0]?.message?.content) {\n        const improvedText = response.data.choices[0].message.content.trim();\n        const outputTokens = this.estimateTokens(improvedText);\n        \n        // Retornar tanto el texto mejorado como la información de tokens\n        return {\n          improvedText,\n          tokensUsed: {\n            input: response.data.usage?.prompt_tokens || estimatedInputTokens,\n            output: response.data.usage?.completion_tokens || outputTokens,\n            total: response.data.usage?.total_tokens || (estimatedInputTokens + outputTokens)\n          }\n        };\n      } else {\n        // Log detallado para diagnosticar el problema\n        console.error('Estructura de respuesta inesperada:', {\n          hasData: !!response.data,\n          hasChoices: !!response.data?.choices,\n          choicesLength: response.data?.choices?.length,\n          firstChoice: response.data?.choices?.[0],\n          hasMessage: !!response.data?.choices?.[0]?.message,\n          hasContent: !!response.data?.choices?.[0]?.message?.content,\n          fullResponse: response.data\n        });\n        \n        // Intentar extraer cualquier contenido disponible\n        const content = response.data?.choices?.[0]?.message?.content || \n                       response.data?.choices?.[0]?.text ||\n                       response.data?.content ||\n                       response.data?.text;\n        \n        if (content && typeof content === 'string' && content.trim()) {\n          console.log('Contenido encontrado en formato alternativo:', content);\n          const improvedText = content.trim();\n          const outputTokens = this.estimateTokens(improvedText);\n          \n          return {\n            improvedText,\n            tokensUsed: {\n              input: response.data.usage?.prompt_tokens || estimatedInputTokens,\n              output: response.data.usage?.completion_tokens || outputTokens,\n              total: response.data.usage?.total_tokens || (estimatedInputTokens + outputTokens)\n            }\n          };\n        }\n        \n        throw new Error(`Respuesta inválida del modelo. Estructura recibida: ${JSON.stringify(response.data, null, 2)}`);\n      }\n    } catch (error) {\n      console.error('Error calling OpenRouter API:', error);\n      console.error('Error response:', error.response?.data);\n      console.error('Error status:', error.response?.status);\n      \n      if (error.response?.status === 401) {\n        throw new Error('API key inválida. Verifica tu configuración en OpenRouter.');\n      } else if (error.response?.status === 429) {\n        throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');\n      } else if (error.response?.status === 402) {\n        throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');\n      } else if (error.response?.status === 400) {\n        const errorMsg = error.response?.data?.error?.message || 'Solicitud inválida';\n        if (errorMsg.includes('context length') || errorMsg.includes('tokens')) {\n          throw new Error(`El texto es demasiado largo para este modelo. Intenta con un texto más corto o selecciona solo una parte del documento.`);\n        }\n        throw new Error(`Error en la solicitud: ${errorMsg}`);\n      } else if (error.code === 'NETWORK_ERROR') {\n        throw new Error('Error de conexión. Verifica tu conexión a internet.');\n      } else {\n        const errorMsg = error.response?.data?.error?.message || error.message;\n        throw new Error(`Error al mejorar el markdown: ${errorMsg}`);\n      }\n    }\n  }\n\n  async testConnection() {\n    if (!this.apiKey) {\n      return { success: false, error: 'API key no configurada' };\n    }\n\n    try {\n      await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: 'openai/gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'user',\n              content: 'Test connection'\n            }\n          ],\n          max_tokens: 10\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Test Connection'\n          }\n        }\n      );\n\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.error?.message || error.message \n      };\n    }\n  }\n}\n\nconst openRouterService = new OpenRouterService();\nexport default openRouterService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}