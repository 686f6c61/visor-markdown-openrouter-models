{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Upload,FileText,Trash2,Copy,Clipboard,Undo}from'lucide-react';import'./MarkdownEditor.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MarkdownEditor=_ref=>{let{markdown,onChange,onSelectionChange}=_ref;const[isDragOver,setIsDragOver]=useState(false);const[copySuccess,setCopySuccess]=useState(false);const[history,setHistory]=useState([]);const[historyIndex,setHistoryIndex]=useState(-1);const textareaRef=useRef(null);const fileInputRef=useRef(null);const handleFileUpload=file=>{if(file&&(file.type==='text/markdown'||file.name.endsWith('.md'))){const reader=new FileReader();reader.onload=e=>{onChange(e.target.result);};reader.readAsText(file);}else{alert('Por favor, selecciona un archivo Markdown (.md)');}};const handleDrop=e=>{e.preventDefault();setIsDragOver(false);const files=Array.from(e.dataTransfer.files);if(files.length>0){handleFileUpload(files[0]);}};const handleDragOver=e=>{e.preventDefault();setIsDragOver(true);};const handleDragLeave=e=>{e.preventDefault();setIsDragOver(false);};const handleFileInputChange=e=>{const file=e.target.files[0];if(file){handleFileUpload(file);}};const handleTextareaChange=e=>{const newValue=e.target.value;saveToHistory(markdown);onChange(newValue);};const saveToHistory=content=>{if(content!==history[historyIndex]){const newHistory=history.slice(0,historyIndex+1);newHistory.push(content);if(newHistory.length>50){// Limitar historial a 50 entradas\nnewHistory.shift();}else{setHistoryIndex(historyIndex+1);}setHistory(newHistory);}};const undoChange=()=>{if(historyIndex>0){setHistoryIndex(historyIndex-1);onChange(history[historyIndex-1]);}};// Inicializar historial\nuseEffect(()=>{if(markdown&&history.length===0){setHistory([markdown]);setHistoryIndex(0);}},[markdown,history.length]);const handleSelectionChange=()=>{if(textareaRef.current){const{selectionStart,selectionEnd}=textareaRef.current;const selectedText=markdown.substring(selectionStart,selectionEnd);onSelectionChange(selectedText.trim());}};const clearContent=()=>{onChange('');if(fileInputRef.current){fileInputRef.current.value='';}};const copyToClipboard=async()=>{try{await navigator.clipboard.writeText(markdown);setCopySuccess(true);setTimeout(()=>setCopySuccess(false),2000);}catch(err){console.error('Error al copiar:',err);// Fallback para navegadores que no soportan clipboard API\nif(textareaRef.current){textareaRef.current.select();document.execCommand('copy');setCopySuccess(true);setTimeout(()=>setCopySuccess(false),2000);}}};const pasteFromClipboard=async()=>{try{const text=await navigator.clipboard.readText();onChange(text);}catch(err){console.error('Error al pegar:',err);// Fallback: focus en el textarea para que el usuario pueda pegar manualmente\nif(textareaRef.current){textareaRef.current.focus();}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"markdown-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-title\",children:[/*#__PURE__*/_jsx(FileText,{size:18}),/*#__PURE__*/_jsx(\"span\",{children:\"Editor Markdown\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},className:\"action-button upload-button\",title:\"Subir archivo MD\",children:[/*#__PURE__*/_jsx(Upload,{size:16}),/*#__PURE__*/_jsx(\"span\",{children:\"Subir\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:pasteFromClipboard,className:\"action-button paste-button\",title:\"Pegar desde portapapeles\",children:[/*#__PURE__*/_jsx(Clipboard,{size:16}),/*#__PURE__*/_jsx(\"span\",{children:\"Pegar\"})]}),markdown&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:copyToClipboard,className:\"action-button copy-button \".concat(copySuccess?'success':''),title:copySuccess?\"¡Copiado!\":\"Copiar contenido\",children:[/*#__PURE__*/_jsx(Copy,{size:16}),/*#__PURE__*/_jsx(\"span\",{children:copySuccess?'¡Copiado!':'Copiar'})]}),historyIndex>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:undoChange,className:\"action-button undo-button\",title:\"Deshacer \\xFAltimo cambio\",children:[/*#__PURE__*/_jsx(Undo,{size:16}),/*#__PURE__*/_jsx(\"span\",{children:\"Deshacer\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:clearContent,className:\"action-button clear-button\",title:\"Limpiar contenido\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-content \".concat(isDragOver?'drag-over':''),onDrop:handleDrop,onDragOver:handleDragOver,onDragLeave:handleDragLeave,children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,value:markdown,onChange:handleTextareaChange,onSelect:handleSelectionChange,onMouseUp:handleSelectionChange,onKeyUp:handleSelectionChange,placeholder:!markdown?\"Escribe o pega tu Markdown aquí, o arrastra un archivo .md...\":\"Escribe o pega tu Markdown aquí...\",className:\"markdown-textarea\",spellCheck:\"false\"}),!markdown&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(Upload,{size:48,className:\"empty-icon\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Sube o pega tu Markdown\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Arrastra un archivo .md aqu\\xED o pega tu contenido directamente\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{var _fileInputRef$current2;return(_fileInputRef$current2=fileInputRef.current)===null||_fileInputRef$current2===void 0?void 0:_fileInputRef$current2.click();},className:\"upload-button-large\",children:[/*#__PURE__*/_jsx(Upload,{size:20}),\"Seleccionar archivo\"]})]})})]}),/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:\".md,.markdown\",onChange:handleFileInputChange,style:{display:'none'}})]});};export default MarkdownEditor;","map":{"version":3,"names":["React","useState","useRef","useEffect","Upload","FileText","Trash2","Copy","Clipboard","Undo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MarkdownEditor","_ref","markdown","onChange","onSelectionChange","isDragOver","setIsDragOver","copySuccess","setCopySuccess","history","setHistory","historyIndex","setHistoryIndex","textareaRef","fileInputRef","handleFileUpload","file","type","name","endsWith","reader","FileReader","onload","e","target","result","readAsText","alert","handleDrop","preventDefault","files","Array","from","dataTransfer","length","handleDragOver","handleDragLeave","handleFileInputChange","handleTextareaChange","newValue","value","saveToHistory","content","newHistory","slice","push","shift","undoChange","handleSelectionChange","current","selectionStart","selectionEnd","selectedText","substring","trim","clearContent","copyToClipboard","navigator","clipboard","writeText","setTimeout","err","console","error","select","document","execCommand","pasteFromClipboard","text","readText","focus","className","children","size","onClick","_fileInputRef$current","click","title","concat","onDrop","onDragOver","onDragLeave","ref","onSelect","onMouseUp","onKeyUp","placeholder","spellCheck","_fileInputRef$current2","accept","style","display"],"sources":["/home/the00b/Escritorio/MD/src/components/MarkdownEditor.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, FileText, Trash2, Copy, Clipboard, Undo } from 'lucide-react';\nimport './MarkdownEditor.css';\n\nconst MarkdownEditor = ({ markdown, onChange, onSelectionChange }) => {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const textareaRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  const handleFileUpload = (file) => {\n    if (file && (file.type === 'text/markdown' || file.name.endsWith('.md'))) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        onChange(e.target.result);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Por favor, selecciona un archivo Markdown (.md)');\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  };\n\n  const handleTextareaChange = (e) => {\n    const newValue = e.target.value;\n    saveToHistory(markdown);\n    onChange(newValue);\n  };\n\n  const saveToHistory = (content) => {\n    if (content !== history[historyIndex]) {\n      const newHistory = history.slice(0, historyIndex + 1);\n      newHistory.push(content);\n      if (newHistory.length > 50) { // Limitar historial a 50 entradas\n        newHistory.shift();\n      } else {\n        setHistoryIndex(historyIndex + 1);\n      }\n      setHistory(newHistory);\n    }\n  };\n\n  const undoChange = () => {\n    if (historyIndex > 0) {\n      setHistoryIndex(historyIndex - 1);\n      onChange(history[historyIndex - 1]);\n    }\n  };\n\n  // Inicializar historial\n  useEffect(() => {\n    if (markdown && history.length === 0) {\n      setHistory([markdown]);\n      setHistoryIndex(0);\n    }\n  }, [markdown, history.length]);\n\n  const handleSelectionChange = () => {\n    if (textareaRef.current) {\n      const { selectionStart, selectionEnd } = textareaRef.current;\n      const selectedText = markdown.substring(selectionStart, selectionEnd);\n      onSelectionChange(selectedText.trim());\n    }\n  };\n\n  const clearContent = () => {\n    onChange('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(markdown);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      console.error('Error al copiar:', err);\n      // Fallback para navegadores que no soportan clipboard API\n      if (textareaRef.current) {\n        textareaRef.current.select();\n        document.execCommand('copy');\n        setCopySuccess(true);\n        setTimeout(() => setCopySuccess(false), 2000);\n      }\n    }\n  };\n\n  const pasteFromClipboard = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      onChange(text);\n    } catch (err) {\n      console.error('Error al pegar:', err);\n      // Fallback: focus en el textarea para que el usuario pueda pegar manualmente\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }\n  };\n\n  return (\n    <div className=\"markdown-editor\">\n      <div className=\"editor-header\">\n        <div className=\"editor-title\">\n          <FileText size={18} />\n          <span>Editor Markdown</span>\n        </div>\n        <div className=\"editor-actions\">\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            className=\"action-button upload-button\"\n            title=\"Subir archivo MD\"\n          >\n            <Upload size={16} />\n            <span>Subir</span>\n          </button>\n          <button\n            onClick={pasteFromClipboard}\n            className=\"action-button paste-button\"\n            title=\"Pegar desde portapapeles\"\n          >\n            <Clipboard size={16} />\n            <span>Pegar</span>\n          </button>\n          {markdown && (\n            <>\n              <button\n                onClick={copyToClipboard}\n                className={`action-button copy-button ${copySuccess ? 'success' : ''}`}\n                title={copySuccess ? \"¡Copiado!\" : \"Copiar contenido\"}\n              >\n                <Copy size={16} />\n                <span>{copySuccess ? '¡Copiado!' : 'Copiar'}</span>\n              </button>\n              {historyIndex > 0 && (\n                <button\n                  onClick={undoChange}\n                  className=\"action-button undo-button\"\n                  title=\"Deshacer último cambio\"\n                >\n                  <Undo size={16} />\n                  <span>Deshacer</span>\n                </button>\n              )}\n              <button\n                onClick={clearContent}\n                className=\"action-button clear-button\"\n                title=\"Limpiar contenido\"\n              >\n                <Trash2 size={16} />\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div\n        className={`editor-content ${isDragOver ? 'drag-over' : ''}`}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n      >\n        <textarea\n          ref={textareaRef}\n          value={markdown}\n          onChange={handleTextareaChange}\n          onSelect={handleSelectionChange}\n          onMouseUp={handleSelectionChange}\n          onKeyUp={handleSelectionChange}\n          placeholder={!markdown ? \"Escribe o pega tu Markdown aquí, o arrastra un archivo .md...\" : \"Escribe o pega tu Markdown aquí...\"}\n          className=\"markdown-textarea\"\n          spellCheck=\"false\"\n        />\n        {!markdown && (\n          <div className=\"empty-overlay\">\n            <div className=\"empty-state\">\n              <Upload size={48} className=\"empty-icon\" />\n              <h3>Sube o pega tu Markdown</h3>\n              <p>Arrastra un archivo .md aquí o pega tu contenido directamente</p>\n              <button\n                onClick={() => fileInputRef.current?.click()}\n                className=\"upload-button-large\"\n              >\n                <Upload size={20} />\n                Seleccionar archivo\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".md,.markdown\"\n        onChange={handleFileInputChange}\n        style={{ display: 'none' }}\n      />\n    </div>\n  );\n};\n\nexport default MarkdownEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}