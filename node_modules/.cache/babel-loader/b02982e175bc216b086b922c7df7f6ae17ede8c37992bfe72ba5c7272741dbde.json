{"ast":null,"code":"import React,{useState}from'react';import Header from'./components/Header';import MarkdownEditor from'./components/MarkdownEditor';import MarkdownPreview from'./components/MarkdownPreview';import AIPanel from'./components/AIPanel';import Footer from'./components/Footer';import FloatingGitHub from'./components/FloatingGitHub';import openRouterService from'./services/openRouterService';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[markdown,setMarkdown]=useState('');const[selectedText,setSelectedText]=useState('');const[isLoading,setIsLoading]=useState(false);const handleMarkdownChange=newMarkdown=>{setMarkdown(newMarkdown);};const handleSelectionChange=selection=>{setSelectedText(selection);};const handleImprove=async(prompt,modelId,textToImprove)=>{setIsLoading(true);try{const improvedText=await openRouterService.improveMarkdown(markdown,prompt,modelId,textToImprove);if(textToImprove){// Replace selected text with improved version\nconst startIndex=markdown.indexOf(textToImprove);if(startIndex!==-1){const beforeText=markdown.substring(0,startIndex);const afterText=markdown.substring(startIndex+textToImprove.length);setMarkdown(beforeText+improvedText+afterText);}setSelectedText('');// Clear selection after improvement\n}else{// Replace entire document\nsetMarkdown(improvedText);}}catch(error){console.error('Error improving markdown:',error);throw error;// Re-throw to let AIPanel handle the error display\n}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"editor-section\",children:/*#__PURE__*/_jsx(MarkdownEditor,{markdown:markdown,onChange:handleMarkdownChange,onSelectionChange:handleSelectionChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-section\",children:/*#__PURE__*/_jsx(MarkdownPreview,{markdown:markdown})}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-section\",children:/*#__PURE__*/_jsx(AIPanel,{onImprove:handleImprove,selectedText:selectedText,isLoading:isLoading})})]})}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(FloatingGitHub,{})]});}export default App;","map":{"version":3,"names":["React","useState","Header","MarkdownEditor","MarkdownPreview","AIPanel","Footer","FloatingGitHub","openRouterService","jsx","_jsx","jsxs","_jsxs","App","markdown","setMarkdown","selectedText","setSelectedText","isLoading","setIsLoading","handleMarkdownChange","newMarkdown","handleSelectionChange","selection","handleImprove","prompt","modelId","textToImprove","improvedText","improveMarkdown","startIndex","indexOf","beforeText","substring","afterText","length","error","console","className","children","onChange","onSelectionChange","onImprove"],"sources":["/home/the00b/Escritorio/MD/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport MarkdownEditor from './components/MarkdownEditor';\nimport MarkdownPreview from './components/MarkdownPreview';\nimport AIPanel from './components/AIPanel';\nimport Footer from './components/Footer';\nimport FloatingGitHub from './components/FloatingGitHub';\nimport openRouterService from './services/openRouterService';\nimport './App.css';\n\nfunction App() {\n  const [markdown, setMarkdown] = useState('');\n  const [selectedText, setSelectedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleMarkdownChange = (newMarkdown) => {\n    setMarkdown(newMarkdown);\n  };\n\n  const handleSelectionChange = (selection) => {\n    setSelectedText(selection);\n  };\n\n  const handleImprove = async (prompt, modelId, textToImprove) => {\n    setIsLoading(true);\n    try {\n      const improvedText = await openRouterService.improveMarkdown(\n        markdown,\n        prompt,\n        modelId,\n        textToImprove\n      );\n\n      if (textToImprove) {\n        // Replace selected text with improved version\n        const startIndex = markdown.indexOf(textToImprove);\n        if (startIndex !== -1) {\n          const beforeText = markdown.substring(0, startIndex);\n          const afterText = markdown.substring(startIndex + textToImprove.length);\n          setMarkdown(beforeText + improvedText + afterText);\n        }\n        setSelectedText(''); // Clear selection after improvement\n      } else {\n        // Replace entire document\n        setMarkdown(improvedText);\n      }\n    } catch (error) {\n      console.error('Error improving markdown:', error);\n      throw error; // Re-throw to let AIPanel handle the error display\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      \n      <main className=\"main-content\">\n        <div className=\"content-grid\">\n          <div className=\"editor-section\">\n            <MarkdownEditor\n              markdown={markdown}\n              onChange={handleMarkdownChange}\n              onSelectionChange={handleSelectionChange}\n            />\n          </div>\n          \n          <div className=\"preview-section\">\n            <MarkdownPreview markdown={markdown} />\n          </div>\n          \n          <div className=\"ai-section\">\n            <AIPanel\n              onImprove={handleImprove}\n              selectedText={selectedText}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n      <FloatingGitHub />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}