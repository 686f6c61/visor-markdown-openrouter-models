{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./components/Header';import MarkdownEditor from'./components/MarkdownEditor';import MarkdownPreview from'./components/MarkdownPreview';import AIPanel from'./components/AIPanel';import Footer from'./components/Footer';import FloatingGitHub from'./components/FloatingGitHub';import openRouterService from'./services/openRouterService';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[markdown,setMarkdown]=useState('');const[selectedText,setSelectedText]=useState('');const[isLoading,setIsLoading]=useState(false);// Precargar README al iniciar la aplicación\nuseEffect(()=>{const loadReadme=async()=>{try{const response=await fetch('/README.md');if(response.ok){const readmeContent=await response.text();setMarkdown(readmeContent);}else{// Fallback si no se puede cargar el README\nsetMarkdown(\"# \\uD83D\\uDE80 Visor Markdown Vitaminado \\u26A1\\n\\n\\xA1Bienvenido al editor de Markdown m\\xE1s potente con IA integrada!\\n\\n## \\u2728 Caracter\\xEDsticas\\n\\n- \\uD83D\\uDCDD **Editor Avanzado** - Escribe y edita Markdown con facilidad\\n- \\uD83D\\uDC41\\uFE0F **Vista Previa** - Renderizado en tiempo real\\n- \\uD83E\\uDD16 **IA Vitaminada** - 10 modelos gratuitos para mejorar contenido\\n- \\uD83C\\uDFAF **Mejora Selectiva** - Mejora solo el texto seleccionado\\n- \\uD83D\\uDCCB **Clipboard** - Copiar y pegar con un clic\\n- \\uD83D\\uDD04 **Historial** - Deshacer cambios f\\xE1cilmente\\n\\n## \\uD83D\\uDE80 C\\xF3mo usar\\n\\n1. **Escribe** o **pega** tu contenido Markdown\\n2. **Selecciona** texto espec\\xEDfico (opcional)\\n3. **Elige** un modelo de IA\\n4. **Mejora** tu contenido con un clic\\n\\n\\xA1Comienza editando este texto o carga tu propio archivo!\");}}catch(error){console.error('Error loading README:',error);// Fallback content\nsetMarkdown(\"# \\uD83D\\uDE80 Visor Markdown Vitaminado\\n\\n\\xA1Bienvenido! Comienza escribiendo tu contenido Markdown aqu\\xED.\\n\\n## Caracter\\xEDsticas\\n- Editor con vista previa en tiempo real\\n- Mejora de contenido con IA\\n- 10 modelos gratuitos disponibles\\n\\n\\xA1Empieza a escribir!\");}};loadReadme();},[]);const handleMarkdownChange=newMarkdown=>{setMarkdown(newMarkdown);};const handleSelectionChange=selection=>{setSelectedText(selection);};const handleImprove=async(prompt,modelId,textToImprove)=>{setIsLoading(true);try{const improvedText=await openRouterService.improveMarkdown(markdown,prompt,modelId,textToImprove);if(textToImprove){// Replace selected text with improved version\nconst startIndex=markdown.indexOf(textToImprove);if(startIndex!==-1){const beforeText=markdown.substring(0,startIndex);const afterText=markdown.substring(startIndex+textToImprove.length);setMarkdown(beforeText+improvedText+afterText);}setSelectedText('');// Clear selection after improvement\n}else{// Replace entire document\nsetMarkdown(improvedText);}}catch(error){console.error('Error improving markdown:',error);throw error;// Re-throw to let AIPanel handle the error display\n}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"editor-section\",children:/*#__PURE__*/_jsx(MarkdownEditor,{markdown:markdown,onChange:handleMarkdownChange,onSelectionChange:handleSelectionChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-section\",children:/*#__PURE__*/_jsx(MarkdownPreview,{markdown:markdown})}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-section\",children:/*#__PURE__*/_jsx(AIPanel,{onImprove:handleImprove,selectedText:selectedText,isLoading:isLoading})})]})}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(FloatingGitHub,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","MarkdownEditor","MarkdownPreview","AIPanel","Footer","FloatingGitHub","openRouterService","jsx","_jsx","jsxs","_jsxs","App","markdown","setMarkdown","selectedText","setSelectedText","isLoading","setIsLoading","loadReadme","response","fetch","ok","readmeContent","text","error","console","handleMarkdownChange","newMarkdown","handleSelectionChange","selection","handleImprove","prompt","modelId","textToImprove","improvedText","improveMarkdown","startIndex","indexOf","beforeText","substring","afterText","length","className","children","onChange","onSelectionChange","onImprove"],"sources":["/home/the00b/Escritorio/MD/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport MarkdownEditor from './components/MarkdownEditor';\nimport MarkdownPreview from './components/MarkdownPreview';\nimport AIPanel from './components/AIPanel';\nimport Footer from './components/Footer';\nimport FloatingGitHub from './components/FloatingGitHub';\nimport openRouterService from './services/openRouterService';\nimport './App.css';\n\nfunction App() {\n  const [markdown, setMarkdown] = useState('');\n  const [selectedText, setSelectedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Precargar README al iniciar la aplicación\n  useEffect(() => {\n    const loadReadme = async () => {\n      try {\n        const response = await fetch('/README.md');\n        if (response.ok) {\n          const readmeContent = await response.text();\n          setMarkdown(readmeContent);\n        } else {\n          // Fallback si no se puede cargar el README\n          setMarkdown(`# 🚀 Visor Markdown Vitaminado ⚡\n\n¡Bienvenido al editor de Markdown más potente con IA integrada!\n\n## ✨ Características\n\n- 📝 **Editor Avanzado** - Escribe y edita Markdown con facilidad\n- 👁️ **Vista Previa** - Renderizado en tiempo real\n- 🤖 **IA Vitaminada** - 10 modelos gratuitos para mejorar contenido\n- 🎯 **Mejora Selectiva** - Mejora solo el texto seleccionado\n- 📋 **Clipboard** - Copiar y pegar con un clic\n- 🔄 **Historial** - Deshacer cambios fácilmente\n\n## 🚀 Cómo usar\n\n1. **Escribe** o **pega** tu contenido Markdown\n2. **Selecciona** texto específico (opcional)\n3. **Elige** un modelo de IA\n4. **Mejora** tu contenido con un clic\n\n¡Comienza editando este texto o carga tu propio archivo!`);\n        }\n      } catch (error) {\n        console.error('Error loading README:', error);\n        // Fallback content\n        setMarkdown(`# 🚀 Visor Markdown Vitaminado\n\n¡Bienvenido! Comienza escribiendo tu contenido Markdown aquí.\n\n## Características\n- Editor con vista previa en tiempo real\n- Mejora de contenido con IA\n- 10 modelos gratuitos disponibles\n\n¡Empieza a escribir!`);\n      }\n    };\n\n    loadReadme();\n  }, []);\n\n  const handleMarkdownChange = (newMarkdown) => {\n    setMarkdown(newMarkdown);\n  };\n\n  const handleSelectionChange = (selection) => {\n    setSelectedText(selection);\n  };\n\n  const handleImprove = async (prompt, modelId, textToImprove) => {\n    setIsLoading(true);\n    try {\n      const improvedText = await openRouterService.improveMarkdown(\n        markdown,\n        prompt,\n        modelId,\n        textToImprove\n      );\n\n      if (textToImprove) {\n        // Replace selected text with improved version\n        const startIndex = markdown.indexOf(textToImprove);\n        if (startIndex !== -1) {\n          const beforeText = markdown.substring(0, startIndex);\n          const afterText = markdown.substring(startIndex + textToImprove.length);\n          setMarkdown(beforeText + improvedText + afterText);\n        }\n        setSelectedText(''); // Clear selection after improvement\n      } else {\n        // Replace entire document\n        setMarkdown(improvedText);\n      }\n    } catch (error) {\n      console.error('Error improving markdown:', error);\n      throw error; // Re-throw to let AIPanel handle the error display\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      \n      <main className=\"main-content\">\n        <div className=\"content-grid\">\n          <div className=\"editor-section\">\n            <MarkdownEditor\n              markdown={markdown}\n              onChange={handleMarkdownChange}\n              onSelectionChange={handleSelectionChange}\n            />\n          </div>\n          \n          <div className=\"preview-section\">\n            <MarkdownPreview markdown={markdown} />\n          </div>\n          \n          <div className=\"ai-section\">\n            <AIPanel\n              onImprove={handleImprove}\n              selectedText={selectedText}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n      <FloatingGitHub />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}