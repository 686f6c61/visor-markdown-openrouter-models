{"ast":null,"code":"import axios from 'axios';\nimport { getModelById } from '../config/models';\nconst OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions';\nclass OpenRouterService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_OPENROUTER_API_KEY || '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';\n    console.log('API Key configurada:', this.apiKey ? 'Sí' : 'No');\n    console.log('API Key desde env:', process.env.REACT_APP_OPENROUTER_API_KEY ? 'Sí' : 'No');\n    if (!this.apiKey) {\n      console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');\n    }\n  }\n\n  // Función para estimar tokens (aproximadamente 4 caracteres = 1 token)\n  estimateTokens(text) {\n    return Math.ceil(text.length / 4);\n  }\n\n  // Función para calcular tokens de salida seguros\n  calculateSafeOutputTokens(inputText, modelId) {\n    const model = getModelById(modelId);\n    if (!model) return 4000;\n    const inputTokens = this.estimateTokens(inputText);\n    const maxOutputTokens = model.maxTokens;\n    const maxContext = model.contextTokens || 32000; // Usar contextTokens del modelo\n\n    // Reservar espacio para tokens del sistema y margen de seguridad\n    const systemTokens = 200; // Estimación para prompts del sistema\n    const safetyMargin = 1000; // Margen de seguridad\n\n    const availableTokens = maxContext - inputTokens - systemTokens - safetyMargin;\n    const safeOutputTokens = Math.min(maxOutputTokens, Math.max(1000, availableTokens));\n    console.log(`Modelo: ${modelId}`);\n    console.log(`Tokens de entrada estimados: ${inputTokens}`);\n    console.log(`Contexto máximo: ${maxContext}`);\n    console.log(`Tokens de salida configurados: ${maxOutputTokens}`);\n    console.log(`Tokens de salida seguros calculados: ${safeOutputTokens}`);\n    return safeOutputTokens;\n  }\n  async improveMarkdown(markdown, prompt, modelId, selectedText = null) {\n    if (!this.apiKey) {\n      throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');\n    }\n    const textToImprove = selectedText || markdown;\n    const isPartialImprovement = selectedText !== null;\n    const systemPrompt = isPartialImprovement ? `Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve únicamente el texto mejorado sin explicaciones adicionales.` : `Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve únicamente el markdown mejorado sin explicaciones adicionales.`;\n    const userPrompt = prompt ? `${prompt}\\n\\nTexto a mejorar:\\n${textToImprove}` : `Mejora este ${isPartialImprovement ? 'texto' : 'documento markdown'} haciéndolo más claro, coherente y bien estructurado:\\n\\n${textToImprove}`;\n\n    // Calcular tokens de salida seguros\n    const fullPrompt = systemPrompt + '\\n' + userPrompt;\n    const safeMaxTokens = this.calculateSafeOutputTokens(fullPrompt, modelId);\n    try {\n      var _response$data, _response$data$choice, _response$data$choice2, _response$data$choice3;\n      const response = await axios.post(OPENROUTER_API_URL, {\n        model: modelId,\n        messages: [{\n          role: 'system',\n          content: systemPrompt\n        }, {\n          role: 'user',\n          content: userPrompt\n        }],\n        temperature: 0.7,\n        max_tokens: safeMaxTokens,\n        stream: false\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'Markdown Preview - Visor Markdown Vitaminado'\n        }\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$choice = _response$data.choices) !== null && _response$data$choice !== void 0 && (_response$data$choice2 = _response$data$choice[0]) !== null && _response$data$choice2 !== void 0 && (_response$data$choice3 = _response$data$choice2.message) !== null && _response$data$choice3 !== void 0 && _response$data$choice3.content) {\n        return response.data.choices[0].message.content.trim();\n      } else {\n        throw new Error('Respuesta inválida del modelo');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6;\n      console.error('Error calling OpenRouter API:', error);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        throw new Error('API key inválida. Verifica tu configuración en OpenRouter.');\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 429) {\n        throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');\n      } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 402) {\n        throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');\n      } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 400) {\n        var _error$response7, _error$response7$data, _error$response7$data2;\n        const errorMsg = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : (_error$response7$data2 = _error$response7$data.error) === null || _error$response7$data2 === void 0 ? void 0 : _error$response7$data2.message) || 'Solicitud inválida';\n        if (errorMsg.includes('context length') || errorMsg.includes('tokens')) {\n          throw new Error(`El texto es demasiado largo para este modelo. Intenta con un texto más corto o selecciona solo una parte del documento.`);\n        }\n        throw new Error(`Error en la solicitud: ${errorMsg}`);\n      } else if (error.code === 'NETWORK_ERROR') {\n        throw new Error('Error de conexión. Verifica tu conexión a internet.');\n      } else {\n        var _error$response8, _error$response8$data, _error$response8$data2;\n        const errorMsg = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : (_error$response8$data2 = _error$response8$data.error) === null || _error$response8$data2 === void 0 ? void 0 : _error$response8$data2.message) || error.message;\n        throw new Error(`Error al mejorar el markdown: ${errorMsg}`);\n      }\n    }\n  }\n  async testConnection() {\n    if (!this.apiKey) {\n      return {\n        success: false,\n        error: 'API key no configurada'\n      };\n    }\n    try {\n      await axios.post(OPENROUTER_API_URL, {\n        model: 'openai/gpt-3.5-turbo',\n        messages: [{\n          role: 'user',\n          content: 'Test connection'\n        }],\n        max_tokens: 10\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.origin,\n          'X-Title': 'Markdown Preview - Test Connection'\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data, _error$response9$data2;\n      return {\n        success: false,\n        error: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : (_error$response9$data2 = _error$response9$data.error) === null || _error$response9$data2 === void 0 ? void 0 : _error$response9$data2.message) || error.message\n      };\n    }\n  }\n}\nconst openRouterService = new OpenRouterService();\nexport default openRouterService;","map":{"version":3,"names":["axios","getModelById","OPENROUTER_API_URL","OpenRouterService","constructor","apiKey","process","env","REACT_APP_OPENROUTER_API_KEY","console","log","warn","estimateTokens","text","Math","ceil","length","calculateSafeOutputTokens","inputText","modelId","model","inputTokens","maxOutputTokens","maxTokens","maxContext","contextTokens","systemTokens","safetyMargin","availableTokens","safeOutputTokens","min","max","improveMarkdown","markdown","prompt","selectedText","Error","textToImprove","isPartialImprovement","systemPrompt","userPrompt","fullPrompt","safeMaxTokens","_response$data","_response$data$choice","_response$data$choice2","_response$data$choice3","response","post","messages","role","content","temperature","max_tokens","stream","headers","window","location","origin","data","choices","message","trim","error","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","status","_error$response7","_error$response7$data","_error$response7$data2","errorMsg","includes","code","_error$response8","_error$response8$data","_error$response8$data2","testConnection","success","_error$response9","_error$response9$data","_error$response9$data2","openRouterService"],"sources":["/home/the00b/Escritorio/MD/src/services/openRouterService.js"],"sourcesContent":["import axios from 'axios';\nimport { getModelById } from '../config/models';\n\nconst OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions';\n\nclass OpenRouterService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_OPENROUTER_API_KEY || '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';\n    \n    console.log('API Key configurada:', this.apiKey ? 'Sí' : 'No');\n    console.log('API Key desde env:', process.env.REACT_APP_OPENROUTER_API_KEY ? 'Sí' : 'No');\n    \n    if (!this.apiKey) {\n      console.warn('OpenRouter API key not found. Please set REACT_APP_OPENROUTER_API_KEY in your environment variables.');\n    }\n  }\n\n  // Función para estimar tokens (aproximadamente 4 caracteres = 1 token)\n  estimateTokens(text) {\n    return Math.ceil(text.length / 4);\n  }\n\n  // Función para calcular tokens de salida seguros\n  calculateSafeOutputTokens(inputText, modelId) {\n    const model = getModelById(modelId);\n    if (!model) return 4000;\n\n    const inputTokens = this.estimateTokens(inputText);\n    const maxOutputTokens = model.maxTokens;\n    const maxContext = model.contextTokens || 32000; // Usar contextTokens del modelo\n    \n    // Reservar espacio para tokens del sistema y margen de seguridad\n    const systemTokens = 200; // Estimación para prompts del sistema\n    const safetyMargin = 1000; // Margen de seguridad\n    \n    const availableTokens = maxContext - inputTokens - systemTokens - safetyMargin;\n    const safeOutputTokens = Math.min(maxOutputTokens, Math.max(1000, availableTokens));\n    \n    console.log(`Modelo: ${modelId}`);\n    console.log(`Tokens de entrada estimados: ${inputTokens}`);\n    console.log(`Contexto máximo: ${maxContext}`);\n    console.log(`Tokens de salida configurados: ${maxOutputTokens}`);\n    console.log(`Tokens de salida seguros calculados: ${safeOutputTokens}`);\n    \n    return safeOutputTokens;\n  }\n\n  async improveMarkdown(markdown, prompt, modelId, selectedText = null) {\n    if (!this.apiKey) {\n      throw new Error('API key no configurada. Por favor, configura REACT_APP_OPENROUTER_API_KEY en tu archivo .env');\n    }\n\n    const textToImprove = selectedText || markdown;\n    const isPartialImprovement = selectedText !== null;\n\n    const systemPrompt = isPartialImprovement \n      ? `Eres un experto en escritura y markdown. Mejora SOLO el texto seleccionado manteniendo el formato markdown. Devuelve únicamente el texto mejorado sin explicaciones adicionales.`\n      : `Eres un experto en escritura y markdown. Mejora el documento completo manteniendo la estructura y formato markdown. Devuelve únicamente el markdown mejorado sin explicaciones adicionales.`;\n\n    const userPrompt = prompt \n      ? `${prompt}\\n\\nTexto a mejorar:\\n${textToImprove}`\n      : `Mejora este ${isPartialImprovement ? 'texto' : 'documento markdown'} haciéndolo más claro, coherente y bien estructurado:\\n\\n${textToImprove}`;\n\n    // Calcular tokens de salida seguros\n    const fullPrompt = systemPrompt + '\\n' + userPrompt;\n    const safeMaxTokens = this.calculateSafeOutputTokens(fullPrompt, modelId);\n\n    try {\n      const response = await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: modelId,\n          messages: [\n            {\n              role: 'system',\n              content: systemPrompt\n            },\n            {\n              role: 'user',\n              content: userPrompt\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: safeMaxTokens,\n          stream: false\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Visor Markdown Vitaminado'\n          }\n        }\n      );\n\n      if (response.data?.choices?.[0]?.message?.content) {\n        return response.data.choices[0].message.content.trim();\n      } else {\n        throw new Error('Respuesta inválida del modelo');\n      }\n    } catch (error) {\n      console.error('Error calling OpenRouter API:', error);\n      console.error('Error response:', error.response?.data);\n      console.error('Error status:', error.response?.status);\n      \n      if (error.response?.status === 401) {\n        throw new Error('API key inválida. Verifica tu configuración en OpenRouter.');\n      } else if (error.response?.status === 429) {\n        throw new Error('Límite de rate excedido. Intenta de nuevo en unos momentos.');\n      } else if (error.response?.status === 402) {\n        throw new Error('Créditos insuficientes en tu cuenta de OpenRouter.');\n      } else if (error.response?.status === 400) {\n        const errorMsg = error.response?.data?.error?.message || 'Solicitud inválida';\n        if (errorMsg.includes('context length') || errorMsg.includes('tokens')) {\n          throw new Error(`El texto es demasiado largo para este modelo. Intenta con un texto más corto o selecciona solo una parte del documento.`);\n        }\n        throw new Error(`Error en la solicitud: ${errorMsg}`);\n      } else if (error.code === 'NETWORK_ERROR') {\n        throw new Error('Error de conexión. Verifica tu conexión a internet.');\n      } else {\n        const errorMsg = error.response?.data?.error?.message || error.message;\n        throw new Error(`Error al mejorar el markdown: ${errorMsg}`);\n      }\n    }\n  }\n\n  async testConnection() {\n    if (!this.apiKey) {\n      return { success: false, error: 'API key no configurada' };\n    }\n\n    try {\n      await axios.post(\n        OPENROUTER_API_URL,\n        {\n          model: 'openai/gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'user',\n              content: 'Test connection'\n            }\n          ],\n          max_tokens: 10\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n            'Content-Type': 'application/json',\n            'HTTP-Referer': window.location.origin,\n            'X-Title': 'Markdown Preview - Test Connection'\n          }\n        }\n      );\n\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.error?.message || error.message \n      };\n    }\n  }\n}\n\nconst openRouterService = new OpenRouterService();\nexport default openRouterService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}